---
swagger: "2.0"
info:
  description: "LogCom Swagger documentation"
  version: "1.0.58"
  title: "LogCom API"
  contact:
    name: "Bloodlab-dev"
    url: "https://bloodlab.org"
    email: "laborit@blutspende.de"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
basePath: "/api"
paths:
  /v1/audit-logs:
    get:
      tags:
      - "AuditLog"
      summary: "Get audit logs"
      description: "Gets all audit log"
      operationId: "GetAuditLogsV1"
      produces:
      - "application/json"
      parameters:
      - name: "searchTerm"
        in: "query"
        description: "The search term"
        required: false
        type: "string"
        x-exportParamName: "SearchTerm"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "The sorting direction"
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "The desired page number"
        required: true
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Page"
      - name: "pageSize"
        in: "query"
        description: "The desired number of items per page"
        required: true
        type: "integer"
        default: 25
        minimum: 1
        x-exportParamName: "PageSize"
      - name: "sort"
        in: "query"
        description: "The sorting parameter"
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      security:
      - BearerAuth: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AuditLogListPageResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "500":
          description: "Internal server error"
  /v1/console-logs:
    get:
      tags:
      - "ConsoleLog"
      summary: "Get console logs"
      description: "Gets all console log"
      operationId: "GetConsoleLogsV1"
      produces:
      - "application/json"
      parameters:
      - name: "searchTerm"
        in: "query"
        description: "The search term"
        required: false
        type: "string"
        x-exportParamName: "SearchTerm"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        description: "The sorting direction"
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "The desired page number"
        required: true
        type: "integer"
        default: 0
        minimum: 0
        x-exportParamName: "Page"
      - name: "pageSize"
        in: "query"
        description: "The desired number of items per page"
        required: true
        type: "integer"
        default: 25
        minimum: 1
        x-exportParamName: "PageSize"
      - name: "sort"
        in: "query"
        description: "The sorting parameter"
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      security:
      - BearerAuth: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ConsoleLogListPageResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "500":
          description: "Internal server error"
  /v1/health:
    get:
      tags:
      - "Health"
      summary: "Service health check"
      description: "Shows if the service is running or not"
      operationId: "GetHealthV1"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/model.HealthCheck"
  /v1/int/audit-logs:
    post:
      tags:
      - "AuditLog"
      summary: "Create audit log"
      description: "Creates a new audit log"
      operationId: "CreateAuditLogV1Int"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "model"
        description: "The audit log DTO"
        required: true
        schema:
          $ref: "#/definitions/CreateAuditLogRequestDTO"
        x-exportParamName: "Model"
      security:
      - BearerAuth: []
      responses:
        "204":
          description: "No content"
        "400":
          description: "Bad request"
        "500":
          description: "Internal server error"
  /v1/int/console-logs:
    post:
      tags:
      - "ConsoleLog"
      summary: "Create console log"
      description: "Creates a new console log"
      operationId: "CreateConsoleLogV1Int"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "model"
        description: "The console log DTO"
        required: true
        schema:
          $ref: "#/definitions/CreateConsoleLogRequestDTO"
        x-exportParamName: "Model"
      security:
      - BearerAuth: []
      responses:
        "204":
          description: "No content"
        "400":
          description: "Bad request"
        "500":
          description: "Internal server error"
securityDefinitions:
  BearerAuth:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  AuditLogChangeDTO:
    type: "object"
    properties:
      category:
        type: "string"
        description: "The category of the change"
      id:
        type: "string"
        format: "uuid"
        description: "The ID"
      message:
        type: "string"
        description: "The message"
      newValue:
        type: "string"
        description: "The new value"
      oldValue:
        type: "string"
        description: "The old value"
      subject:
        type: "string"
        description: "The short description of the change"
      subjectName:
        type: "string"
        description: "The name of the subject"
      subjectPropertyName:
        type: "string"
        description: "The property name of the subject"
    example:
      newValue: "newValue"
      subjectPropertyName: "subjectPropertyName"
      subject: "subject"
      id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      oldValue: "oldValue"
      category: "category"
      message: "message"
      subjectName: "subjectName"
  AuditLogDTO:
    type: "object"
    properties:
      category:
        type: "string"
        description: "The category of the change"
      createdAt:
        type: "string"
        format: "date-time"
        description: "The creation timestamp"
      createdById:
        type: "string"
        format: "uuid"
        description: "The user's ID who created"
        x-nullable: true
      createdByName:
        type: "string"
        description: "The user's name who created"
      groupedChanges:
        type: "array"
        description: "The grouped changes"
        items:
          $ref: "#/definitions/AuditLogChangeDTO"
      id:
        type: "string"
        format: "uuid"
        description: "The ID"
      message:
        type: "string"
        description: "The message"
      newValue:
        type: "string"
        description: "The new value"
      oldValue:
        type: "string"
        description: "The old value"
      requestId:
        type: "string"
        description: "The request ID making dependent logs trackable"
      serviceAffected:
        type: "string"
        description: "The service which the change affects"
      serviceCreated:
        type: "string"
        description: "The service which created"
      subject:
        type: "string"
        description: "The subject of the change"
      subjectName:
        type: "string"
        description: "The name of the subject"
      subjectPropertyName:
        type: "string"
        description: "The property name of the subject"
    example:
      createdByName: "createdByName"
      newValue: "newValue"
      subject: "subject"
      message: "message"
      createdAt: "2000-01-23T04:56:07.000+00:00"
      subjectPropertyName: "subjectPropertyName"
      requestId: "requestId"
      groupedChanges:
      - newValue: "newValue"
        subjectPropertyName: "subjectPropertyName"
        subject: "subject"
        id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        oldValue: "oldValue"
        category: "category"
        message: "message"
        subjectName: "subjectName"
      - newValue: "newValue"
        subjectPropertyName: "subjectPropertyName"
        subject: "subject"
        id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        oldValue: "oldValue"
        category: "category"
        message: "message"
        subjectName: "subjectName"
      id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      oldValue: "oldValue"
      category: "category"
      serviceAffected: "serviceAffected"
      createdById: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      serviceCreated: "serviceCreated"
      subjectName: "subjectName"
  AuditLogListPageResponse:
    type: "object"
    properties:
      currentPage:
        type: "integer"
        example: 1
        description: "The actual page number"
      items:
        type: "array"
        description: "The items"
        items:
          $ref: "#/definitions/AuditLogDTO"
      pageSize:
        type: "integer"
        example: 50
        description: "The number of items per page"
      totalCount:
        type: "integer"
        example: 69
        description: "The total count of items"
      totalPages:
        type: "integer"
        example: 2
        description: "The total pages"
    example:
      totalPages: 2
      pageSize: 50
      currentPage: 1
      totalCount: 69
      items:
      - createdByName: "createdByName"
        newValue: "newValue"
        subject: "subject"
        message: "message"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        subjectPropertyName: "subjectPropertyName"
        requestId: "requestId"
        groupedChanges:
        - newValue: "newValue"
          subjectPropertyName: "subjectPropertyName"
          subject: "subject"
          id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          oldValue: "oldValue"
          category: "category"
          message: "message"
          subjectName: "subjectName"
        - newValue: "newValue"
          subjectPropertyName: "subjectPropertyName"
          subject: "subject"
          id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          oldValue: "oldValue"
          category: "category"
          message: "message"
          subjectName: "subjectName"
        id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        oldValue: "oldValue"
        category: "category"
        serviceAffected: "serviceAffected"
        createdById: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        serviceCreated: "serviceCreated"
        subjectName: "subjectName"
      - createdByName: "createdByName"
        newValue: "newValue"
        subject: "subject"
        message: "message"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        subjectPropertyName: "subjectPropertyName"
        requestId: "requestId"
        groupedChanges:
        - newValue: "newValue"
          subjectPropertyName: "subjectPropertyName"
          subject: "subject"
          id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          oldValue: "oldValue"
          category: "category"
          message: "message"
          subjectName: "subjectName"
        - newValue: "newValue"
          subjectPropertyName: "subjectPropertyName"
          subject: "subject"
          id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          oldValue: "oldValue"
          category: "category"
          message: "message"
          subjectName: "subjectName"
        id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        oldValue: "oldValue"
        category: "category"
        serviceAffected: "serviceAffected"
        createdById: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        serviceCreated: "serviceCreated"
        subjectName: "subjectName"
  ConsoleLogDTO:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
        description: "The log timestamp"
      createdById:
        type: "string"
        format: "uuid"
        description: "The user's ID who created"
        x-nullable: true
      createdByName:
        type: "string"
        description: "The user's name who created"
      id:
        type: "string"
        format: "uuid"
        description: "The ID"
      level:
        type: "integer"
        description: "The log level (Trace=-1, Debug=0, Info=1, Warning=2, Error=3,\
          \ Fatal=4, Panic=5)"
      message:
        type: "string"
        description: "The log message"
      requestId:
        type: "string"
        format: "uuid"
        description: "The request ID making dependent logs trackable"
      service:
        type: "string"
        description: "The service which sent the log"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      createdByName: "createdByName"
      level: 0
      requestId: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      service: "service"
      id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      message: "message"
      createdById: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  ConsoleLogListPageResponse:
    type: "object"
    properties:
      currentPage:
        type: "integer"
        example: 1
        description: "The actual page number"
      items:
        type: "array"
        description: "The items"
        items:
          $ref: "#/definitions/ConsoleLogDTO"
      pageSize:
        type: "integer"
        example: 50
        description: "The number of items per page"
      totalCount:
        type: "integer"
        example: 69
        description: "The total count of items"
      totalPages:
        type: "integer"
        example: 2
        description: "The total pages"
    example:
      totalPages: 2
      pageSize: 50
      currentPage: 1
      totalCount: 69
      items:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        createdByName: "createdByName"
        level: 0
        requestId: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        service: "service"
        id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        message: "message"
        createdById: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        createdByName: "createdByName"
        level: 0
        requestId: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        service: "service"
        id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        message: "message"
        createdById: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  CreateAuditLogRequestDTO:
    type: "object"
    required:
    - "category"
    - "serviceCreated"
    - "subject"
    properties:
      category:
        type: "string"
        description: "The category of the change"
      createdAt:
        type: "string"
        format: "date-time"
        description: "The creation timestamp"
      createdById:
        type: "string"
        format: "uuid"
        description: "The user's ID who created"
        x-nullable: true
      createdByName:
        type: "string"
        description: "The user's name who created"
      groupedChanges:
        type: "array"
        description: "The grouped changes if there are many related ones"
        items:
          $ref: "#/definitions/NewAuditLogChangeDTO"
      message:
        type: "string"
        description: "The message"
      newValue:
        type: "string"
        description: "The new value"
      oldValue:
        type: "string"
        description: "The old value"
      serviceAffected:
        type: "string"
        description: "The service which the change affects"
      serviceCreated:
        type: "string"
        description: "The service which created"
      subject:
        type: "string"
        description: "The subject of the change"
      subjectName:
        type: "string"
        description: "The name of the subject"
      subjectPropertyName:
        type: "string"
        description: "The property name of the subject"
  CreateConsoleLogRequestDTO:
    type: "object"
    required:
    - "level"
    - "message"
    - "service"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
        description: "The log timestamp"
      createdById:
        type: "string"
        format: "uuid"
        description: "The user's ID who created"
        x-nullable: true
      createdByName:
        type: "string"
        description: "The user's name who created"
      level:
        type: "integer"
        description: "The log level (Trace=-1, Debug=0, Info=1, Warning=2, Error=3,\
          \ Fatal=4, Panic=5)"
      message:
        type: "string"
        description: "The log message"
      service:
        type: "string"
        description: "The service which sent the log"
  NewAuditLogChangeDTO:
    type: "object"
    properties:
      category:
        type: "string"
        description: "The category of the change"
      message:
        type: "string"
        description: "The message"
      newValue:
        type: "string"
        description: "The new value"
      oldValue:
        type: "string"
        description: "The old value"
      subject:
        type: "string"
        description: "The short description of the change"
      subjectName:
        type: "string"
        description: "The name of the subject"
      subjectPropertyName:
        type: "string"
        description: "The property name of the subject"
  model.HealthCheck:
    type: "object"
    properties:
      apiVersion:
        type: "array"
        items:
          type: "string"
      service:
        type: "string"
      status:
        type: "string"
    example:
      apiVersion:
      - "apiVersion"
      - "apiVersion"
      service: "service"
      status: "status"
